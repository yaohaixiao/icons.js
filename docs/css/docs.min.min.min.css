/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.aside,.outline-chapters,.section-svg .ijs-icon__svg{-webkit-transition-duration:.3s}.case,.docs,.main,.outline-heading,.outline-icon,.section__dl,sub,sup{position:relative}.case,.docs,.main,.section__dl{z-index:1}.case:after,.outline-drawer__overlay{content:''}button,hr,input{overflow:visible}progress,sub,sup{vertical-align:baseline}.aside,.main,textarea{overflow:auto}.outline-heading__anchor,[hidden],template{display:none}html{-webkit-text-size-adjust:100%}body{margin:0}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}.case,.main__cdn,.main__footer,.section__footer{border-top:1px solid #ddd}.case,.main__cdn{border-bottom:1px solid #ddd}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}.docs,body,html{overflow:hidden;height:100%}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.outline-print__title,body,html{font-family:'Microsoft YaHei UI',Arial,sans-serif}summary{display:list-item}.aside,.docs,.outline-drawer__modal{-webkit-box-direction:normal}body,html{background:#fafafa;color:#333;font-size:14px;line-height:150%}.aside,code{font-family:'Source Code Pro',Consolas,Georgia,Monaco,monospace,Arial,sans-serif}a:hover,a:link,a:visited{color:#058942;text-decoration:none}a:hover{text-decoration:underline}.docs{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;width:100%;margin:0}.aside,.outline-drawer__modal{display:-webkit-box;-webkit-box-orient:vertical}.aside{display:flex;-ms-flex-negative:0;flex-shrink:0;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap;width:260px;margin:0;height:100%;background-color:#333;color:#ddd;-webkit-box-shadow:0 0 5px 2px #ddd;box-shadow:0 0 5px 2px #ddd;transition-duration:.3s}.ijs-icon,.ijs-icon__svg,.main__button,.outline-icon,.section__dd,.section__dt{display:inline-block}.aside__nav,.main{-webkit-box-flex:1}.main{-ms-flex:1;flex:1;height:100%;background-color:#fff}.aside__header{margin:0 auto;-ms-flex-negative:0;flex-shrink:0;overflow:hidden}.aside__nav{-ms-flex:1;flex:1;overflow:auto}.aside__h2{margin:0 auto;height:54px;line-height:54px;font-size:20px;font-weight:400;font-family:Georgia,Consolas,Arial,sans-serif;text-align:center;overflow:hidden}.aside__h3{margin:0 auto;padding:0 20px;font-size:16px;overflow:hidden}.aside__list{margin:0;padding:10px 0;overflow:hidden}.aside__item{height:32px;line-height:32px;padding:0 30px;cursor:pointer;font-size:13px;overflow:hidden}.aside .outline-chapters{-webkit-box-flex:1;-ms-flex:1;flex:1}.aside .outline-chapters__placeholder{background-color:#555;border-left:3px solid #fff}.aside .outline-chapters__anchor:link,.aside .outline-chapters__anchor:visited{color:#ddd;text-decoration:none}.aside .outline-chapters__anchor:hover{color:#ddd;text-decoration:underline}.aside .outline-chapters_active.outline-chapters__anchor:hover,.aside .outline-chapters_active.outline-chapters__anchor:link,.aside .outline-chapters_active.outline-chapters__anchor:visited{color:#fff}.main__footer,.main__header{margin:0 auto;padding:1em;text-align:center;overflow:hidden}.main__h1{margin:0 auto;padding-top:1em;font-size:5em;font-weight:400;line-height:2em;overflow:hidden}.main__name{color:#1f8dd6;font-weight:400}.main__tagline{margin:1em auto;max-width:660px;line-height:1.3em;font-size:2em;color:#999;font-weight:100;overflow:hidden}.main__cdn{margin:2em 0;padding:2em;font-size:16px;line-height:150%;text-align:center;background-color:#fafafa;color:#666;overflow:hidden}.main__download{margin:1em auto;width:200px;text-align:center;overflow:hidden}.main__button{border-radius:4px;padding:14px 29px;font-size:18px;font-family:'Source Code Pro',Consolas,Georgia,Monaco,monospace,Arial,sans-serif;background-color:#058942;overflow:hidden}.case__pre,.section__footer,.section__pre{background-color:#fafafa}.main__button:hover,.main__button:link,.main__button:visited{color:#fff;text-decoration:none}.main__footer{margin:0 3em}.section{margin:1em 0;overflow:hidden}.section__content,.section__footer,.section__header{margin:0;padding:0 3em;overflow:hidden}.section__title{color:#666}.section__h3{color:#1f8dd6;font-size:1.35em}.section__h4{font-size:1.1em;color:#666}.section__h5{font-size:1em;color:#999}.section__dd,.section__dl,.section__dt{margin:0;padding:0;overflow:hidden}.section__dd{color:#058942}.section__pre{margin:2em 0;padding:1em;font-size:14px;line-height:150%;text-align:left;border:1px solid #ddd;border-radius:4px;color:#666;overflow:auto}.case,.case:after,.case__console,.case__toolbar,.section__code{overflow:hidden}.section__code{display:block;margin:0 auto}.section__footer{margin-top:3em;color:#999}.case__item:hover,.section-svg:hover{background-color:#f7f8f9}.section-svg{text-align:center;padding-top:20px;color:#666}.case__action,.case__remove,.section-svg:hover{color:#058942;cursor:pointer}.section-svg .ijs-icon__svg{width:36px;height:36px;transition-duration:.3s}.section-svg__name{line-height:24px}.section-svg:hover .ijs-icon__svg{-webkit-transform:scale(160%);transform:scale(160%)}.outline-icon__svg,.outline-toolbar__icon{-webkit-transform:translate(-50%,-50%);fill:currentcolor}.section_grids{display:grid;grid-template-columns:repeat(6,1fr);grid-gap:20px;margin-top:20px}.case{display:grid;grid-template-columns:repeat(2,1fr);gap:40px;padding:1em}.outline-heading:hover .outline-heading__anchor,.outline-toolbar_btt .outline-toolbar__button,.outline-toolbar_ttb .outline-toolbar__button{display:inline-block}.case:after{position:absolute;z-index:2;top:0;left:50%;height:100%;width:0;border-left:1px solid #ddd}.case__pre,.case__textarea{font-size:13px;line-height:150%}.case__code,.case__pre,.case__textarea{font-family:'Courier New',Consolas,Georgia,Arial,sans-serif}.case__pre{margin:0;padding:1em;height:100%;border-radius:4px;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:auto}.case__toolbar{margin:0 auto;height:36px;line-height:36px;font-size:14px;padding:0 16px;text-align:right}.case__action,.case__remove{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.case__action{font-size:13px;padding-left:10px}.case__action:first-child{padding-left:0}.case__remove{float:right}.case__console{margin:0 auto;height:180px;border:1px solid #ddd}.case__textarea{margin:0 auto;width:100%;height:100%;border:none;outline:0;padding:1em;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:auto}.case__item,.case__list{margin:0;padding:0;list-style-type:none;overflow:hidden}.case__item,.outline-drawer__footer,.outline-drawer__main,.outline-drawer__title{padding:0 16px}.case__list{height:360px;border-top:1px solid #ddd;border-bottom:1px solid #ddd;font-size:13px;overflow:auto}.case__item{height:36px;line-height:36px;cursor:pointer}.ijs-icon__svg,.outline-icon,.outline-icon__svg{width:1em;height:1em;overflow:hidden}.ijs-icon__svg{vertical-align:middle;fill:currentcolor}:root{--outline-zIndex:2000;--outline-sticky-height:100%;--outline-chapters-width:100%}.outline-icon{z-index:1;vertical-align:middle}.outline-icon__svg{position:absolute;z-index:2;top:50%;left:50%;transform:translate(-50%,-50%)}.outline-heading{z-index:1;overflow:hidden}.outline-heading__anchor:hover,.outline-heading__anchor:link,.outline-heading__anchor:visited{color:#999;text-decoration:none}.outline-heading__anchor:hover{color:#1f8dd6}.outline-heading_start:hover{overflow:visible}.outline-heading_start .outline-heading__anchor{position:absolute;z-index:2;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);left:-1em}.outline-drawer{position:relative;z-index:-1;top:0;left:0;margin:0;width:100%;height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;visibility:hidden;overflow:hidden}.outline-drawer__modal{-webkit-box-shadow:0 0 6px 1px #dcdfe6;box-shadow:0 0 6px 1px #dcdfe6;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap;position:absolute;z-index:21;height:100%;background-color:#fff;-webkit-transition-duration:.4s;transition-duration:.4s;overflow:hidden}.outline-drawer__footer,.outline-drawer__header,.outline-drawer__main{width:100%;-webkit-box-sizing:border-box;box-sizing:border-box}.outline-drawer__footer,.outline-drawer__header{-ms-flex-negative:0;flex-shrink:0}.outline-drawer__header,.outline-drawer__title{position:relative;z-index:1;margin:0 auto;height:52px;line-height:52px;overflow:hidden}.outline-chapters__title,.outline-drawer__title{margin:0 16px;border-bottom:1px solid #dcdfe6;font-weight:400}.outline-drawer__title{font-size:16px;-webkit-box-sizing:border-box;box-sizing:border-box}.outline-drawer__close{position:absolute;z-index:2;top:50%;right:12px;width:20px;height:20px;line-height:20px;color:#999;font-size:20px;text-align:center;cursor:pointer;-webkit-transform:translateY(-50%);transform:translateY(-50%);overflow:hidden}.outline-drawer__close .outline-icon{position:absolute;z-index:2;top:0;left:0}.outline-drawer__close:hover{color:#666}.outline-drawer__main{-webkit-box-flex:1;-ms-flex:1;flex:1;overflow:auto}.outline-drawer__footer{margin:0 auto;text-align:right;overflow:hidden}.outline-drawer__overlay{position:relative;z-index:1;top:0;left:0;width:100%;height:100%;background-color:#fff;opacity:.1;overflow:hidden}.outline-drawer_ltr.outline-drawer_tiny,.outline-drawer_rtl.outline-drawer_tiny{width:280px}.outline-drawer_ltr.outline-drawer_mini,.outline-drawer_rtl.outline-drawer_mini{width:480px}.outline-drawer_ltr.outline-drawer_small,.outline-drawer_rtl.outline-drawer_small{width:540px}.outline-drawer_ltr.outline-drawer_regular,.outline-drawer_rtl.outline-drawer_regular{width:680px}.outline-drawer_ltr.outline-drawer_medium,.outline-drawer_rtl.outline-drawer_medium{width:720px}.outline-drawer_ltr.outline-drawer_large,.outline-drawer_rtl.outline-drawer_large{width:960px}.outline-drawer_rtl{border-left:1px solid #dcdfe6}.outline-drawer_rtl.outline-drawer_tiny.outline-drawer_closed{right:-290px}.outline-drawer_rtl.outline-drawer_mini.outline-drawer_closed{right:-490px}.outline-drawer_rtl.outline-drawer_small.outline-drawer_closed{right:-550px}.outline-drawer_rtl.outline-drawer_regular.outline-drawer_closed{right:-690px}.outline-drawer_rtl.outline-drawer_medium.outline-drawer_closed{right:-730px}.outline-drawer_rtl.outline-drawer_large.outline-drawer_closed{right:-970px}.outline-drawer_ltr{border-right:1px solid #dcdfe6}.outline-drawer_ltr.outline-drawer_tiny.outline-drawer_closed{left:-290px}.outline-drawer_ltr.outline-drawer_mini.outline-drawer_closed{left:-490px}.outline-drawer_ltr.outline-drawer_small.outline-drawer_closed{left:-550px}.outline-drawer_ltr.outline-drawer_regular.outline-drawer_closed{left:-690px}.outline-drawer_ltr.outline-drawer_medium.outline-drawer_closed{left:-730px}.outline-drawer_ltr.outline-drawer_large.outline-drawer_closed{left:-970px}.outline-drawer_btt,.outline-drawer_ttb{left:0;width:100%}.outline-drawer_btt.outline-drawer_tiny,.outline-drawer_ttb.outline-drawer_tiny{height:240px}.outline-drawer_btt.outline-drawer_mini,.outline-drawer_ttb.outline-drawer_mini{height:320px}.outline-drawer_btt.outline-drawer_small,.outline-drawer_ttb.outline-drawer_small{height:360px}.outline-drawer_btt.outline-drawer_regular,.outline-drawer_ttb.outline-drawer_regular{height:400px}.outline-drawer_btt.outline-drawer_medium,.outline-drawer_ttb.outline-drawer_medium{height:440px}.outline-drawer_btt.outline-drawer_large,.outline-drawer_ttb.outline-drawer_large{height:480px}.outline-drawer_ttb{border-bottom:1px solid #dcdfe6}.outline-drawer_ttb.outline-drawer_tiny.outline-drawer_closed{top:-250px}.outline-drawer_ttb.outline-drawer_mini.outline-drawer_closed{top:-330px}.outline-drawer_ttb.outline-drawer_small.outline-drawer_closed{top:-370px}.outline-drawer_ttb.outline-drawer_regular.outline-drawer_closed{top:-410px}.outline-drawer_ttb.outline-drawer_medium.outline-drawer_closed{top:-450px}.outline-drawer_ttb.outline-drawer_large.outline-drawer_closed{top:-490px}.outline-drawer_btt{top:initial;border-top:1px solid #dcdfe6}.outline-drawer_btt.outline-drawer_tiny.outline-drawer_closed{bottom:-250px}.outline-drawer_btt.outline-drawer_mini.outline-drawer_closed{bottom:-330px}.outline-drawer_btt.outline-drawer_small.outline-drawer_closed{bottom:-370px}.outline-drawer_btt.outline-drawer_regular.outline-drawer_closed{bottom:-410px}.outline-drawer_btt.outline-drawer_medium.outline-drawer_closed{bottom:-450px}.outline-drawer_btt.outline-drawer_large.outline-drawer_closed{bottom:-490px}.outline-drawer_opened{visibility:visible;z-index:var(--outline-zIndex)}.outline-drawer_opened.outline-drawer{position:fixed}.outline-drawer_opened.outline-drawer_rtl{right:0}.outline-drawer_opened.outline-drawer_ltr{left:0}.outline-drawer_opened.outline-drawer_ttb{top:0}.outline-drawer_opened.outline-drawer_btt{bottom:0}.outline-drawer_offset.outline-drawer_ltr,.outline-drawer_offset.outline-drawer_rtl{height:calc(100% - 4em);top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.outline-drawer_offset.outline-drawer_btt,.outline-drawer_offset.outline-drawer_ttb{width:calc(100% - 4em);left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.outline-drawer_offset.outline-drawer_opened.outline-drawer_rtl{right:2em}.outline-drawer_offset.outline-drawer_opened.outline-drawer_ltr{left:2em}.outline-drawer_offset.outline-drawer_opened.outline-drawer_ttb{top:2em}.outline-drawer_offset.outline-drawer_opened.outline-drawer_btt{bottom:2em}.outline-drawer_auto.outline-drawer_ltr,.outline-drawer_auto.outline-drawer_rtl{height:auto;max-height:calc(100% - 4em)}.outline-drawer_full{padding:0}.outline-chapters{position:relative;z-index:1;margin:0;width:var(--outline-chapters-width);transition-duration:.3s;overflow:auto}.outline-chapters__title{height:40px;line-height:40px;padding:0 16px;font-size:16px;overflow:hidden}.outline-chapters__main{position:relative;z-index:1;margin:0;overflow:hidden}.outline-chapters__item,.outline-chapters__list,.outline-chapters__subject{position:relative;z-index:2;margin:0;padding:0;list-style-type:none;overflow:hidden}.outline-chapters__list{padding:.5em 0}.outline-chapters__subject{padding-left:1em}.outline-chapters__item{margin:0;line-height:30px;font-size:13px;overflow:hidden}.outline-chapters__placeholder{position:absolute;z-index:1;top:0;left:0;width:100%;height:30px;background-color:#f7f8f9;border-left:2px solid #058942;-webkit-transition-duration:.2s;transition-duration:.2s;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden}.outline-chapters__anchor{white-space:nowrap;text-overflow:ellipsis;overflow:hidden;display:block;padding:0 1.5em}.outline-chapters__anchor:hover,.outline-chapters__anchor:link,.outline-chapters__anchor:visited{text-decoration:none;color:#555}.outline-chapters__anchor:hover{color:#058942}.outline-chapters__code{padding-right:.5em}.outline-chapters_active.outline-chapters__anchor:hover,.outline-chapters_active.outline-chapters__anchor:link,.outline-chapters_active.outline-chapters__anchor:visited{color:#058942;font-weight:400}.outline-chapters_fixed,.outline-chapters_sticky{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;z-index:var(--outline-zIndex);top:0;overflow:hidden}.outline-chapters_hidden,.outline-print,.outline-print__close,.outline-toolbar__button.hide,.outline-toolbar_btt .outline-toolbar__button.outline-toolbar_hidden,.outline-toolbar_ltr .outline-toolbar__button.outline-toolbar_hidden,.outline-toolbar_rtl .outline-toolbar__button.outline-toolbar_hidden,.outline-toolbar_ttb .outline-toolbar__button.outline-toolbar_hidden{display:none}.outline-chapters_fixed .outline-chapters__main,.outline-chapters_fixed .outline-chapters__title,.outline-chapters_sticky .outline-chapters__main,.outline-chapters_sticky .outline-chapters__title{-webkit-box-sizing:border-box;box-sizing:border-box}.outline-chapters_fixed .outline-chapters__title,.outline-chapters_sticky .outline-chapters__title{-ms-flex-negative:0;flex-shrink:0}.outline-chapters_fixed .outline-chapters__main,.outline-chapters_sticky .outline-chapters__main{-webkit-box-flex:1;-ms-flex:1;flex:1;overflow:auto}.outline-chapters_sticky{position:sticky;max-height:var(--outline-sticky-height)}.outline-chapters_fixed{position:fixed;max-height:100%}.outline-chapters_folded{width:0}.outline-toolbar{position:fixed;z-index:99999;margin:0;-webkit-transition-duration:.3s;transition-duration:.3s;overflow:hidden}.outline-toolbar__button{-webkit-box-shadow:0 0 6px 1px #dcdfe6;box-shadow:0 0 6px 1px #dcdfe6;position:relative;z-index:1;margin:10px;width:36px;height:36px;border:1px solid #dcdfe6;border-radius:3px;-webkit-box-sizing:border-box;box-sizing:border-box;background-color:#fff;cursor:pointer;text-align:center;color:#666;overflow:hidden}.outline-toolbar__button:hover{color:#058942;border-color:#058942}.outline-toolbar__anchor:hover,.outline-toolbar__anchor:link,.outline-toolbar__anchor:visited{color:#999;text-decoration:none}.outline-toolbar__anchor:hover{color:#058942}.outline-toolbar__icon{position:absolute;z-index:2;top:50%;left:50%;width:20px;height:20px;transform:translate(-50%,-50%);overflow:hidden}.outline-toolbar_active.outline-toolbar__button{color:#fff;background-color:#058942;border-color:#058942}.outline-toolbar_active .outline-toolbar__anchor:hover,.outline-toolbar_active .outline-toolbar__anchor:link,.outline-toolbar_active .outline-toolbar__anchor:visited,.outline-toolbar_active.outline-toolbar__button:hover{color:#fff}.outline-toolbar_rounded.outline-toolbar__button{border-radius:18px}.outline-toolbar_disabled .outline-toolbar__anchor:hover,.outline-toolbar_disabled .outline-toolbar__anchor:link,.outline-toolbar_disabled .outline-toolbar__anchor:visited,.outline-toolbar_disabled .outline-toolbar__button,.outline-toolbar_disabled.outline-toolbar__anchor:hover,.outline-toolbar_disabled.outline-toolbar__anchor:link,.outline-toolbar_disabled.outline-toolbar__anchor:visited,.outline-toolbar_disabled.outline-toolbar__button{cursor:not-allowed;color:#999}.outline-toolbar_disabled .outline-toolbar__anchor:hover:hover,.outline-toolbar_disabled .outline-toolbar__anchor:link:hover,.outline-toolbar_disabled .outline-toolbar__anchor:visited:hover,.outline-toolbar_disabled .outline-toolbar__button:hover,.outline-toolbar_disabled.outline-toolbar__anchor:hover:hover,.outline-toolbar_disabled.outline-toolbar__anchor:link:hover,.outline-toolbar_disabled.outline-toolbar__anchor:visited:hover,.outline-toolbar_disabled.outline-toolbar__button:hover{color:#999}.outline-toolbar_disabled .outline-toolbar__button,.outline-toolbar_disabled.outline-toolbar__button{background-color:#f5f5f5}.outline-toolbar_btt,.outline-toolbar_ttb{left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.outline-toolbar_ttb{top:12px}.outline-toolbar_ttb.outline-toolbar_hidden{top:-56px}.outline-toolbar_btt{bottom:12px}.outline-toolbar_btt.outline-toolbar_hidden{bottom:-56px}.outline-toolbar_ltr,.outline-toolbar_rtl{-webkit-transform:translateY(-50%);transform:translateY(-50%);width:56px}.outline-toolbar_rtl{top:50%;right:12px}.outline-toolbar_rtl.outline-toolbar_hidden{right:-86px}.outline-toolbar_ltr{top:50%;left:12px}.outline-toolbar_ltr.outline-toolbar_hidden{left:-86px}::-webkit-scrollbar{width:7px;height:7px;-webkit-border-radius:5px}::-webkit-scrollbar-track-piece{-webkit-border-radius:5px}::-webkit-scrollbar-thumb:vertical{background-color:rgba(0,0,0,.25);-webkit-border-radius:5px}::-webkit-scrollbar-thumb:horizontal{background-color:rgba(0,0,0,.25);-webkit-border-radius:5px}::-webkit-scrollbar:hover{background-color:rgba(0,0,0,.15)}::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,.35)}.outline-print__title{text-align:center;font-weight:400;overflow:hidden}@media print{body,html{height:initial!important}.outline-print{display:block!important;overflow:hidden}.outline-print.outline-reading .outline-print__close,.outline-print_sibling{display:none!important}.outline-print.outline-reading{position:relative!important;height:auto!important;padding:0!important;overflow:hidden!important}.outline-print.outline-reading .outline-print__title{font-size:20pt!important}.outline-print pre{padding:1em!important;border:1px solid #ddd!important;border-radius:4px!important}.outline-print code,.outline-print pre{background-color:#fff!important}.outline-print img,.outline-print svg,.outline-print table{-webkit-column-break-inside:avoid;-moz-column-break-inside:avoid;break-inside:avoid}}.outline-reading,.outline-reading .outline-print__close{display:block;position:fixed;margin:0;background-color:#fff}.outline-reading{z-index:2;top:0;left:0;width:100%;height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;padding:3em 4em;overflow:auto}.outline-reading .outline-print__close{z-index:3;top:50%;right:22px;width:36px;height:36px;border-radius:18px;border:1px solid #dcdfe6;line-height:30px;text-align:center;-webkit-transform:translateY(-50%);transform:translateY(-50%);cursor:pointer;-webkit-box-shadow:0 0 8px #ddd;box-shadow:0 0 8px #ddd;color:#999;overflow:hidden}.outline-reading .outline-print__close:hover{background-color:#058942;color:#fff}.outline-reading .outline-print__title{line-height:1.3em;font-size:3.5em}.outline-reading_hidden,.outline-reading_hidden.outline-print_sibling{display:none}@media (max-width:720px){.outline-reading{padding:0}.outline-reading .outline-print__title{font-size:2.5em}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
