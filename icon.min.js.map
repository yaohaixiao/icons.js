{"version":3,"file":"icon.min.js","sources":["utils/toString.js","utils/isArray.js","utils/isString.js","utils/isSVG.js","utils/isObject.js","utils/isFunction.js","utils/setAttributes.js","utils/hasOwn.js","utils/setAttribute.js","icon.js","createElement.js"],"sourcesContent":["/**\n * Object 对象原型上的 toString 方法\n * ========================================================================\n * @method toString\n * @param {*} val\n * @returns {string}\n */\nconst toString = (val) => {\n  return Object.prototype.toString.apply(val)\n}\n\nexport default toString\n","import toString from './toString'\r\n\r\n/**\r\n * 检测数据是否为 Array 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isArray = (o) => {\r\n  if (Array.isArray) {\r\n    return Array.isArray(o)\r\n  } else {\r\n    return toString(o) === '[object Array]'\r\n  }\r\n}\r\n\r\nexport default isArray\r\n","/**\n * 检测数据是否为 String 类型\n * ========================================================================\n * @method isArray\n * @param {*} str\n * @returns {boolean}\n */\nconst isString = (str) => {\n  return typeof str === 'string'\n}\n\nexport default isString\n","import isString from './isString'\r\n\r\nconst isSVG = (str) => {\r\n  const declaration = '(?:<\\\\?xml[^>]*>\\\\s*)?'\r\n  const doctype =\r\n    '(?:<\\\\!doctype svg[^>]*\\\\s*(?:\\\\[?(?:\\\\s*<![^>]*>\\\\s*)*\\\\]?)*[^>]*>\\\\s*)?'\r\n  const content = '<svg[^>]*>[^]*<\\\\/svg>\\\\s*$'\r\n  const svg = `^\\\\s*${declaration}${doctype}${content}\\\\s*$`\r\n  const pattern = new RegExp(svg, 'i')\r\n\r\n  return isString(str) && pattern.test(str)\r\n}\r\n\r\nexport default isSVG\r\n","import toString from './toString'\nimport isFunction from './isFunction'\n\n/**\n * 检测数据是否为 Object 类型\n * ========================================================================\n * @method isObject\n * @param {*} o\n * @returns {boolean}\n */\nconst isObject = (o) => {\n  return (\n    (toString(o) === '[object Object]' ||\n      typeof o === 'object' ||\n      isFunction(o)) &&\n    o !== null\n  )\n}\n\nexport default isObject\n","import toString from './toString'\n\n/**\n * 检测测试数据是否为 Function 类型\n * ========================================================================\n * @method isFunction\n * @param {*} val - （必须）待检测的数据\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\n */\nconst isFunction = (val) => {\n  return typeof val === 'function' || toString(val) === '[object Function]'\n}\n\nexport default isFunction\n","import isObject from './isObject'\nimport hasOwn from './hasOwn'\nimport setAttribute from './setAttribute'\n\nconst setAttributes = (el, attrs) => {\n  if (!el || !isObject(attrs)) {\n    return false\n  }\n\n  Object.keys(attrs).forEach((attr) => {\n    const value = attrs[attr]\n    if (hasOwn(attrs, attr)) {\n      setAttribute(el, attr, value)\n    }\n  })\n}\n\nexport default setAttributes\n","/**\n * 检测对象自身属性中是否具有指定的属性。\n * ========================================================================\n * @method hasOwn\n * @param {Object} obj - （必须）检测的目标对象\n * @param {String} prop - （必须）属性名\n * @returns {Boolean}\n */\nconst hasOwn = (obj, prop) => {\n  const hasOwnProperty = Object.prototype.hasOwnProperty\n  return obj && hasOwnProperty.call(obj, prop)\n}\n\nexport default hasOwn\n","/**\n * 给 DOM 节点设置属性/值\n * ========================================================================\n * @method setAttribute\n * @param {HTMLElement} el - DOM 节点\n * @param {String} attr - 属性名称\n * @param {String|Number|Boolean} value - 属性值\n */\nconst setAttribute = (el, attr, value) => {\n  let tagName = el.tagName.toLowerCase()\n\n  switch (attr) {\n    case 'style':\n      el.style.cssText = value\n      break\n    case 'value':\n      if (tagName === 'input' || tagName === 'textarea') {\n        el.value = value\n      } else {\n        el.setAttribute(attr, value)\n      }\n      break\n    case 'className':\n      el.className = value\n      break\n    default:\n      el.setAttribute(attr, value)\n      break\n  }\n}\n\nexport default setAttribute\n","import createElement from './createElement'\r\n\r\n/**\r\n * 创建 SVG 图标 DOM 元素\r\n * ========================================================================\r\n * @method icon\r\n * @alias createElement\r\n * @see createElement\r\n * @param {String} name\r\n * @param {Object} [options]\r\n * @param {Number|Array} [options.size]\r\n * @param {String} [options.color]\r\n * @param {String} [options.iconSet]\r\n * @param {Object} [options.attrs]\r\n * @returns {HTMLElement}\r\n */\r\nconst icon = (name, options = {}) => {\r\n  return createElement(name, options)\r\n}\r\n\r\nexport default icon\r\n","import isArray from './utils/isArray'\r\nimport isString from './utils/isString'\r\nimport isSVG from './utils/isSVG'\r\nimport setAttributes from './utils/setAttributes'\r\n\r\n/**\r\n * 创建 SVG 图标 DOM 元素\r\n * ========================================================================\r\n * @method createElement\r\n * @param {String} name - （必须）当前图标集中的图标名称或者完整的 SVG 图标字符串\r\n * @param {Object} [options] - （可选）配置参数对象\r\n * @param {Number|Array} [options.size] - （可选）图标大小，Number 类型高和宽相等，Array 类型可以单独设置高和宽\r\n * @param {String} [options.color] - （可选）图标颜色\r\n * @param {String} [options.iconSet] - （可选）图标集的名称\r\n * @param {Object} [options.attrs] - （可选）给创建的 icons 元素设置的 HTML 属性对象\r\n * @returns {HTMLElement}\r\n */\r\nconst createElement = (name, options = {}) => {\r\n  const size = options.size || 0\r\n  const color = options.color || ''\r\n  const iconSet = options.iconSet || ''\r\n  const width = isArray(size) ? size[0] : size\r\n  const height = isArray(size) ? size[1] : size\r\n  const defaultRules = size ? `width:${width}px;height:${height}px;` : ''\r\n  const cssRules = color ? defaultRules + `color:${color}` : defaultRules\r\n  const $icon = document.createElement('i')\r\n  const attrs = options.attrs || {}\r\n  let binds = ''\r\n  let svg = ''\r\n  let $svg\r\n\r\n  if (!isString(name)) {\r\n    return null\r\n  }\r\n\r\n  if (isSVG(name)) {\r\n    svg = name\r\n  } else {\r\n    binds =\r\n      iconSet && iconSet !== 'icon'\r\n        ? `xlink:href=\"#${iconSet}-icon-${name}\"`\r\n        : `xlink:href=\"#icon-${name}\"`\r\n    svg =\r\n      `<svg aria-hidden=\"true\" class=\"ijs-icon__svg\" style=\"${cssRules}\">` +\r\n      `<use ${binds}></use>` +\r\n      `</svg>`\r\n  }\r\n\r\n  if (attrs.className) {\r\n    attrs.className = 'ijs-icon ' + attrs.className\r\n  } else {\r\n    attrs.className = 'ijs-icon'\r\n  }\r\n\r\n  setAttributes($icon, attrs)\r\n  $icon.innerHTML = svg\r\n\r\n  if (isSVG(name)) {\r\n    $svg = $icon.querySelector('svg')\r\n    setAttributes($svg, {\r\n      'aria-hidden': true,\r\n      xmlns: 'http://www.w3.org/2000/svg',\r\n      class: 'ijs-icon__svg',\r\n      width: 200,\r\n      height: 200,\r\n      style: cssRules\r\n    })\r\n  }\r\n\r\n  return $icon\r\n}\r\n\r\nexport default createElement\r\n"],"names":["toString","val","Object","prototype","apply","isArray","o","Array","isString","str","isSVG","pattern","RegExp","test","isObject","setAttributes","el","attrs","keys","forEach","attr","value","obj","prop","hasOwnProperty","call","hasOwn","tagName","toLowerCase","style","cssText","setAttribute","className","name","options","size","color","iconSet","width","height","defaultRules","cssRules","$icon","document","createElement","$svg","binds","svg","innerHTML","querySelector","xmlns","class"],"mappings":"qOAOA,MAAMA,EAAYC,GACTC,OAAOC,UAAUH,SAASI,MAAMH,GCCnCI,EAAWC,GACXC,MAAMF,QACDE,MAAMF,QAAQC,GAEE,mBAAhBN,EAASM,GCNdE,EAAYC,GACM,iBAARA,ECNVC,EAASD,IACb,MAKME,EAAU,IAAIC,OADR,uIACoB,KAEhC,OAAOJ,EAASC,IAAQE,EAAQE,KAAKJ,EAAG,ECApCK,EAAYR,IAChB,OACmB,oBAAhBN,EAASM,IACK,iBAANA,ICHW,mBADJL,EDKHK,ICJuC,sBAAlBN,EAASC,MDKrC,OAANK,ECNe,IAACL,CDOjB,EEZGc,EAAgB,CAACC,EAAIC,KACzB,IAAKD,IAAOF,EAASG,GACnB,OAAO,EAGTf,OAAOgB,KAAKD,GAAOE,SAASC,IAC1B,MAAMC,EAAQJ,EAAMG,GCFT,EAACE,EAAKC,KACnB,MAAMC,EAAiBtB,OAAOC,UAAUqB,eACxC,OAAOF,GAAOE,EAAeC,KAAKH,EAAKC,EAAI,EDCrCG,CAAOT,EAAOG,IEHD,EAACJ,EAAII,EAAMC,KAC9B,IAAIM,EAAUX,EAAGW,QAAQC,cAEzB,OAAQR,GACN,IAAK,QACHJ,EAAGa,MAAMC,QAAUT,EACnB,MACF,IAAK,QACa,UAAZM,GAAmC,aAAZA,EACzBX,EAAGK,MAAQA,EAEXL,EAAGe,aAAaX,EAAMC,GAExB,MACF,IAAK,YACHL,EAAGgB,UAAYX,EACf,MACF,QACEL,EAAGe,aAAaX,EAAMC,GAEzB,EFhBGU,CAAaf,EAAII,EAAMC,EACxB,GACD,QGES,CAACY,EAAMC,EAAU,KCCR,EAACD,EAAMC,EAAU,MACrC,MAAMC,EAAOD,EAAQC,MAAQ,EACvBC,EAAQF,EAAQE,OAAS,GACzBC,EAAUH,EAAQG,SAAW,GAC7BC,EAAQjC,EAAQ8B,GAAQA,EAAK,GAAKA,EAClCI,EAASlC,EAAQ8B,GAAQA,EAAK,GAAKA,EACnCK,EAAeL,EAAO,SAASG,cAAkBC,OAAc,GAC/DE,EAAWL,EAAQI,EAAe,SAASJ,IAAUI,EACrDE,EAAQC,SAASC,cAAc,KAC/B3B,EAAQiB,EAAQjB,OAAS,CAAE,EACjC,IAEI4B,EAFAC,EAAQ,GACRC,EAAM,GAGV,OAAKvC,EAASyB,IAIVvB,EAAMuB,GACRc,EAAMd,GAENa,EACET,GAAuB,SAAZA,EACP,gBAAgBA,UAAgBJ,KAChC,qBAAqBA,KAC3Bc,EACE,wDAAwDN,WAChDK,kBAIR7B,EAAMe,UACRf,EAAMe,UAAY,YAAcf,EAAMe,UAEtCf,EAAMe,UAAY,WAGpBjB,EAAc2B,EAAOzB,GACrByB,EAAMM,UAAYD,EAEdrC,EAAMuB,KACRY,EAAOH,EAAMO,cAAc,OAC3BlC,EAAc8B,EAAM,CAClB,eAAe,EACfK,MAAO,6BACPC,MAAO,gBACPb,MAAO,IACPC,OAAQ,IACRV,MAAOY,KAIJC,GArCE,IAqCFA,EDpDAE,CAAcX,EAAMC"}